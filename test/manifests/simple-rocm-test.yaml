apiVersion: batch/v1
kind: Job
metadata:
  name: simple-rocm-test
  namespace: default
spec:
  template:
    spec:
      containers:
      - name: rocm-test
        image: rocm/pytorch:latest
        command: ["/bin/bash"]
        args:
        - -c
        - |
          echo "=== Simple ROCm Test ==="
          echo "Current user: $(whoami)"
          echo "Current groups: $(groups)"
          
          echo ""
          echo "Testing rocm-smi..."
          rocm-smi --list-gpus
          
          echo ""
          echo "Testing hipconfig..."
          hipconfig
          
          echo ""
          echo "Testing GPU device access..."
          ls -la /dev/dri/
          ls -la /dev/kfd
          
          echo ""
          echo "Testing with HIP_VISIBLE_DEVICES=0..."
          HIP_VISIBLE_DEVICES=0 python3 -c "
          import torch
          print(f'PyTorch version: {torch.__version__}')
          print(f'CUDA available: {torch.cuda.is_available()}')
          print(f'CUDA device count: {torch.cuda.device_count()}')
          if torch.cuda.is_available():
              print(f'GPU 0: {torch.cuda.get_device_name(0)}')
          "
        resources:
          limits:
            amd.com/gpu: 1
          requests:
            amd.com/gpu: 1
        volumeMounts:
        - name: dri
          mountPath: /dev/dri
        - name: kfd
          mountPath: /dev/kfd
      restartPolicy: Never
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      volumes:
      - name: dri
        hostPath:
          path: /dev/dri
      - name: kfd
        hostPath:
          path: /dev/kfd
  backoffLimit: 3
